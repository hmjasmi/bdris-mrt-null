clc
clear
close all
M = 5;
K = M;
N = 16;
warning('off','all')
Iter = 1e2;
P_tx_dBm = 5;
P_tx = 10.^(P_tx_dBm./10)*1e-3;
N0_dBm = -80;
N0 = 10.^(N0_dBm./10)*1e-3;
data_length = 1;
SNR_dB = P_tx_dBm - N0_dBm;
SNR = 10.^(SNR_dB./10);
c = 3e8;        % Speed of light
f = 2.4e9;      % Carrier frequency
lambda = c/f;   % Wavelength
d_BS_BDRIS = 50;
d_BDRIS_Uk = 2.5*ones(K,1);
d0 = 1;
rho = 2.2;
C_0 = 10.^(-30/10);
PL_BS_BDRIS = C_0*(d_BS_BDRIS/d0).^-rho;
PL_BDRIS_Uk = C_0*(d_BDRIS_Uk/d0).^-rho;
PL_dB = 10.*log10([PL_BS_BDRIS;PL_BDRIS_Uk]);

parfor i_loop = 1:length(N)
    i_loop
    tic
    warning('off','all')
    iter = 0;
    cond_num = 0;
    rank_num = 0;
    f_Relaxed = 0;
    f_Symuni = 0;
    g_Relaxed = 0;
    g_Symuni = 0;
    P_max = P_tx;
    while(iter<Iter)
        W = sqrt(PL_BS_BDRIS)./sqrt(2).*(randn(N(i_loop),M) + 1j*randn(N(i_loop),M));
        H = sqrt(PL_BDRIS_Uk)./sqrt(2).*(randn(K,N(i_loop)) + 1j*randn(K,N(i_loop)));
        W_norm = W./sqrt(PL_BS_BDRIS);
        H_norm = H./sqrt(PL_BDRIS_Uk);
        [Theta_MaxF_FC,R_MaxF_FC] = func_MaxF(W_norm,H_norm,N);
        [Theta_MaxF_NG_2,R_MaxF_NG_2] = func_MaxF(W_norm,H_norm,2);
        [Theta_MaxF_NG_4,R_MaxF_NG_4] = func_MaxF(W_norm,H_norm,4);
        [Theta_MaxF_NG_8,R_MaxF_NG_8] = func_MaxF(W_norm,H_norm,8);
        [Theta_MaxF_SC,R_MaxF_SC] = func_MaxF(W_norm,H_norm,1);
        [Theta_MRT_SC,R_MRT_SC] = func_MRT_GC(W_norm,H_norm,1);
        [Theta_MRT_NG_2,R_MRT_NG_2] = func_MRT_GC(W_norm,H_norm,2);
        [Theta_MRT_NG_4,R_MRT_NG_4] = func_MRT_GC(W_norm,H_norm,4);
        [Theta_MRT_NG_8,R_MRT_NG_8] = func_MRT_GC(W_norm,H_norm,4);
        [Theta_MRT_FC,R_MRT_FC] = func_MRT_GC(W_norm,H_norm,N);
        sigma = sqrt(N0);
        [P_R_MaxF_SC, P_I_MaxF_SC] = func_signalPower(H*Theta_MaxF_SC*W);
        [P_R_MaxF_NG_2, P_I_MaxF_NG_2] = func_signalPower(H*Theta_MaxF_NG_2*W);
        [P_R_MaxF_NG_4, P_I_MaxF_NG_4] = func_signalPower(H*Theta_MaxF_NG_4*W);
        [P_R_MaxF_NG_8, P_I_MaxF_NG_8] = func_signalPower(H*Theta_MaxF_NG_8*W);
        [P_R_MaxF_FC, P_I_MaxF_FC] = func_signalPower(H*Theta_MaxF_FC*W);
        [P_R_MRT_SC, P_I_MRT_SC] = func_signalPower(H*Theta_MRT_SC*W);
        [P_R_MRT_NG_2, P_I_MRT_NG_2] = func_signalPower(H*Theta_MRT_NG_2*W);
        [P_R_MRT_NG_4, P_I_MRT_NG_4] = func_signalPower(H*Theta_MRT_NG_4*W);
        [P_R_MRT_NG_8, P_I_MRT_NG_8] = func_signalPower(H*Theta_MRT_NG_8*W);
        [P_R_MRT_FC, P_I_MRT_FC] = func_signalPower(H*Theta_MRT_FC*W);
        f_Symuni = f_Symuni +       [sum(P_R_MaxF_SC);...
                                     sum(P_R_MaxF_NG_2);...
                                     sum(P_R_MaxF_NG_4);...
                                     sum(P_R_MaxF_NG_8);...
                                     sum(P_R_MaxF_FC);...
                                     sum(P_R_MRT_SC);...
                                     sum(P_R_MRT_NG_2);...
                                     sum(P_R_MRT_NG_4);...
                                     sum(P_R_MRT_NG_8);...
                                     sum(P_R_MRT_FC);...
                                     ];
        g_Symuni = g_Symuni +       [sum(P_I_MaxF_SC,'all');...
                                     sum(P_I_MaxF_NG_2,'all');...
                                     sum(P_I_MaxF_NG_4,'all');...
                                     sum(P_I_MaxF_NG_8,'all');...
                                     sum(P_I_MaxF_FC,'all');...
                                     sum(P_I_MRT_SC,'all');...
                                     sum(P_I_MRT_NG_2,'all');...
                                     sum(P_I_MRT_NG_4,'all');...
                                     sum(P_I_MRT_NG_8,'all');...
                                     sum(P_I_MRT_FC,'all');...
                                     ];
        [P_R_MaxF_SC, P_I_MaxF_SC] = func_signalPower(H*R_MaxF_SC*W);
        [P_R_MaxF_NG_2, P_I_MaxF_NG_2] = func_signalPower(H*R_MaxF_NG_2*W);
        [P_R_MaxF_NG_4, P_I_MaxF_NG_4] = func_signalPower(H*R_MaxF_NG_4*W);
        [P_R_MaxF_NG_8, P_I_MaxF_NG_8] = func_signalPower(H*R_MaxF_NG_8*W);
        [P_R_MaxF_FC, P_I_MaxF_FC] = func_signalPower(H*R_MaxF_FC*W);
        [P_R_MRT_SC, P_I_MRT_SC] = func_signalPower(H*R_MRT_SC*W);
        [P_R_MRT_NG_2, P_I_MRT_NG_2] = func_signalPower(H*R_MRT_NG_2*W);
        [P_R_MRT_NG_4, P_I_MRT_NG_4] = func_signalPower(H*R_MRT_NG_4*W);
        [P_R_MRT_NG_8, P_I_MRT_NG_8] = func_signalPower(H*R_MRT_NG_8*W);
        [P_R_MRT_FC, P_I_MRT_FC] = func_signalPower(H*R_MRT_FC*W);
        f_Relaxed = f_Relaxed +      [sum(P_R_MaxF_SC);...
                                     sum(P_R_MaxF_NG_2);...
                                     sum(P_R_MaxF_NG_4);...
                                     sum(P_R_MaxF_NG_8);...
                                     sum(P_R_MaxF_FC);...
                                     sum(P_R_MRT_SC);...
                                     sum(P_R_MRT_NG_2);...
                                     sum(P_R_MRT_NG_4);...
                                     sum(P_R_MRT_NG_8);...
                                     sum(P_R_MRT_FC);...
                                     ];
        g_Relaxed = g_Relaxed +      [sum(P_I_MaxF_SC,'all');...
                                     sum(P_I_MaxF_NG_2,'all');...
                                     sum(P_I_MaxF_NG_4,'all');...
                                     sum(P_I_MaxF_NG_8,'all');...
                                     sum(P_I_MaxF_FC,'all');...
                                     sum(P_I_MRT_SC,'all');...
                                     sum(P_I_MRT_NG_2,'all');...
                                     sum(P_I_MRT_NG_4,'all');...
                                     sum(P_I_MRT_NG_8,'all');...
                                     sum(P_I_MRT_FC,'all');...
                                     ];

        cond_num = cond_num + [cond(H*R_MaxF_SC*W,2);...
                               cond(H*R_MaxF_NG_2*W,2);...
                               cond(H*R_MaxF_NG_4*W,2);...
                               cond(H*R_MaxF_NG_8*W,2);...
                               cond(H*R_MaxF_FC*W,2);...
                               cond(H*Theta_MaxF_SC*W,2);...
                               cond(H*Theta_MaxF_NG_2*W,2);...
                               cond(H*Theta_MaxF_NG_4*W,2);...
                               cond(H*Theta_MaxF_NG_8*W,2);...
                               cond(H*Theta_MaxF_FC*W,2);...
                               ];

        rank_num = rank_num + [rank(H*R_MaxF_SC*W);...
                               rank(H*R_MaxF_NG_2*W);...
                               rank(H*R_MaxF_NG_4*W);...
                               rank(H*R_MaxF_NG_8*W);...
                               rank(H*R_MaxF_FC*W);...
                               rank(H*Theta_MaxF_SC*W);...
                               rank(H*Theta_MaxF_NG_2*W);...
                               rank(H*Theta_MaxF_NG_4*W);...
                               rank(H*Theta_MaxF_NG_8*W);...
                               rank(H*Theta_MaxF_FC*W);...
                               ];

        iter = iter + 1;
    end
    Cond_num(:,i_loop) = cond_num./Iter;
    Rank_num(:,i_loop) = rank_num./Iter;
    F_Relaxed(:,i_loop) = f_Relaxed./Iter;
    F_Symuni(:,i_loop) = f_Symuni./Iter;
    G_Relaxed(:,i_loop) = g_Relaxed./Iter;
    G_Symuni(:,i_loop) = g_Symuni./Iter;
end